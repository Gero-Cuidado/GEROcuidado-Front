<testExecutions version="1">
<file path="src\app\__tests__\editarRotina.spec.tsx">
<testCase name="EditarRotina Component deve renderizar todos os componentes" duration="3103" />
<testCase name="EditarRotina Component deve atualizar os valores dos inputs corretamente" duration="120" />
<testCase name="EditarRotina Component deve editar a rotina com sucesso" duration="97" />
<testCase name="EditarRotina Component deve exibir mensagens de erro corretamente" duration="63" />
<testCase name="EditarRotina Component deve solicitar permiss&#xf5;es de notifica&#xe7;&#xf5;es e obter o token" duration="29" />
<testCase name="EditarRotina Component Salvar com descri&#xe7;&#xe3;o muito grande" duration="39" />
<testCase name="EditarRotina Component Salvar hora com formato errado" duration="34" />
<testCase name="EditarRotina Component Salvar sem hora" duration="36" />
<testCase name="EditarRotina Component Salvar com t&#xed;tulo muito grande" duration="36" />
</file>
<file path="src\app\__tests__\modalmetrica.spec.tsx">
<testCase name="ModalMetrica Component renderiza sem erros" duration="83" />
<testCase name="ModalMetrica Component exibe as unidades corretas" duration="7" />
<testCase name="ModalMetrica Component exibe as unidades corretas 1" duration="24" />
<testCase name="ModalMetrica Component exibe as unidades corretas 2" duration="9" />
<testCase name="ModalMetrica Component exibe as unidades corretas 3" duration="9" />
<testCase name="ModalMetrica Component exibe as unidades corretas 4" duration="8" />
<testCase name="ModalMetrica Component exibe as unidades corretas 5" duration="45" />
<testCase name="ModalMetrica Component exibe as unidades corretas 6" duration="6" />
<testCase name="ModalMetrica Component exibe as unidades corretas 7" duration="7" />
<testCase name="ModalMetrica Component exibe as unidades corretas 8" duration="8" />
<testCase name="ModalMetrica Component Exibe mensagem de erro para valor vazio" duration="7" />
<testCase name="ModalMetrica Component fecha o modal ao pressionar o bot&#xe3;o Cancelar" duration="7" />
<testCase name="ModalMetrica Component exibe mensagem de erro ao tentar salvar com valor inv&#xe1;lido" duration="7" />
</file>
<file path="src\app\__tests__\user.service.spec.tsx">
<testCase name="postUser deve fazer uma chamada de API bem-sucedida" duration="2" />
<testCase name="postUser deve lidar com uma chamada de API com erro" duration="1" />
<testCase name="updateUser deve fazer uma chamada de API bem-sucedida" duration="1" />
<testCase name="updateUser deve lidar com uma chamada de API com erro" duration="2" />
<testCase name="getUserById deve fazer uma chamada de API bem-sucedida" duration="2" />
<testCase name="getUserById deve lidar com uma chamada de API com erro" duration="1" />
<testCase name="deleteUserById deve fazer uma chamada de API bem-sucedida" duration="1" />
<testCase name="deleteUserById deve lidar com uma chamada de API com erro" duration="1" />
<testCase name="loginUser deve fazer uma chamada de API bem-sucedida" duration="1" />
<testCase name="loginUser deve lidar com uma chamada de API com erro" duration="1" />
</file>
<file path="src\app\__tests__\forum.service.spec.tsx">
<testCase name="getAllPublicacao Get: deve fazer uma chamada de API bem-sucedida" duration="2" />
<testCase name="getAllPublicacao deve lidar com uma chamada de API com erro" duration="1" />
<testCase name="postPublicacao Post: deve fazer uma chamada de API bem-sucedida" duration="1" />
<testCase name="postPublicacao deve lidar com uma chamada de API com erro" duration="4" />
<testCase name="updatePublicacao deve fazer uma chamada de API bem-sucedida" duration="1" />
<testCase name="updatePublicacao deve lidar com uma chamada de API com erro" duration="1" />
<testCase name="deletePublicacaoById deve fazer uma chamada de API bem-sucedida" duration="1" />
<testCase name="deletePublicacaoById deve lidar com uma chamada de API com erro" duration="1" />
</file>
<file path="src\app\__tests__\cadastrarIdoso.spec.tsx">
<testCase name="CadastrarIdoso component renders correctly" duration="111" />
<testCase name="CadastrarIdoso component Salvar sem nome" duration="24" />
<testCase name="CadastrarIdoso component Salvar com nome muito grande" duration="27" />
<testCase name="CadastrarIdoso component Salvar com nome curto" duration="29" />
<testCase name="CadastrarIdoso component Salvar data com formato errado" duration="30" />
<testCase name="CadastrarIdoso component Salvar com telefone errado" duration="25" />
<testCase name="CadastrarIdoso component Navega para a tela anterior ao clicar no bot&#xe3;o de voltar" duration="22" />
<testCase name="CadastrarIdoso component Cadastra um idoso com sucesso quando todos os dados est&#xe3;o v&#xe1;lidos" duration="193" />
<testCase name="CadastrarIdoso component Navega para a tela anterior ao clicar no bot&#xe3;o de voltar quando canGoBack &#xe9; falso" duration="20" />
<testCase name="CadastrarIdoso component Exibe mensagem de erro ao deixar campos obrigat&#xf3;rios em branco" duration="21" />
</file>
<file path="src\app\__tests__\cadastrarRotina.spec.tsx">
<testCase name="CadastrarRotina Component registers a routine if all values are valid" duration="242" />
<testCase name="CadastrarRotina Component should show error if title is empty" duration="37" />
<testCase name="CadastrarRotina Component should show error if title is too long" duration="37" />
<testCase name="CadastrarRotina Component should render input fields and save button" duration="24" />
<testCase name="CadastrarRotina Component should hide error message when input is corrected" duration="41" />
<testCase name="CadastrarRotina Component should show error if date has the wrong format" duration="31" />
<testCase name="CadastrarRotina Component should show error if date is empty" duration="39" />
<testCase name="CadastrarRotina Component should show error if time has the wrong format" duration="32" />
<testCase name="CadastrarRotina Component should show error if time is empty" duration="34" />
<testCase name="CadastrarRotina Component should show error if description is too long" duration="29" />
<testCase name="CadastrarRotina Component should show error if a category is not selected" duration="29" />
</file>
<file path="src\app\__tests__\idoso.service.spec.tsx">
<testCase name="postIdoso deve fazer uma chamada de API bem-sucedida" duration="1" />
<testCase name="postIdoso deve lidar com uma chamada de API com erro" duration="1" />
<testCase name="updateIdoso deve fazer uma chamada de API bem-sucedida" duration="1" />
<testCase name="updateIdoso deve lidar com uma chamada de API com erro" duration="1" />
<testCase name="getAllIdoso Get: deve fazer uma chamada de API bem-sucedida" duration="1" />
<testCase name="getAllIdoso deve lidar com uma chamada de API com erro" duration="1" />
<testCase name="deleteIdoso deve fazer uma chamada de API bem-sucedida" duration="1" />
<testCase name="deleteIdoso deve lidar com uma chamada de API com erro" duration="1" />
</file>
<file path="src\app\__tests__\schema.spec.tsx">
<testCase name="Database Schema deve ter a vers&#xe3;o correta" duration="2" />
<testCase name="Database Schema deve ter as tabelas corretas" duration="6" />
<testCase name="Database Schema deve ter as colunas corretas para cada tabela" duration="8" />
<testCase name="Database Schema deve ter as colunas corretas com o tipo correto" duration="6" />
</file>
<file path="src\app\__tests__\rotina.service.spec.tsx">
<testCase name="postRotina deve fazer uma chamada de API bem-sucedida" duration="2" />
<testCase name="postRotina deve lidar com uma chamada de API com erro" duration="1" />
<testCase name="updateRotina deve fazer uma chamada de API bem-sucedida" duration="1" />
<testCase name="updateRotina deve lidar com uma chamada de API com erro" duration="1" />
<testCase name="getAllRotina Get: deve fazer uma chamada de API bem-sucedida" duration="1" />
<testCase name="getAllRotina deve lidar com uma chamada de API com erro" duration="1" />
<testCase name="deleteRotina deve fazer uma chamada de API bem-sucedida" duration="1" />
<testCase name="deleteRotina deve lidar com uma chamada de API com erro" duration="1" />
</file>
<file path="src\app\__tests__\editarPerfil.spec.tsx">
<testCase name="EditarPerfil component Atualiza nome com o input" duration="80" />
<testCase name="EditarPerfil component Exibe mensagem de erro ao tentar salvar com nome vazio" duration="14" />
<testCase name="EditarPerfil component Exibe mensagem de erro ao tentar salvar com nome muito curto" duration="19" />
<testCase name="EditarPerfil component Exibe mensagem de erro ao tentar salvar com nome muito longo" duration="15" />
<testCase name="EditarPerfil component N&#xe3;o exibe mensagem de erro ao salvar com nome v&#xe1;lido" duration="23" />
<testCase name="EditarPerfil component Exibe mensagem de confirma&#xe7;&#xe3;o ao apagar conta" duration="13" />
<testCase name="EditarPerfil component Apaga a conta corretamente ap&#xf3;s confirma&#xe7;&#xe3;o" duration="19" />
<testCase name="EditarPerfil component Navega para a tela anterior ao clicar no bot&#xe3;o de voltar" duration="13" />
<testCase name="EditarPerfil component Atualiza foto de perfil corretamente" duration="1018">
<failure message="Error"><![CDATA[Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)

- Expected
+ Received

@@ -4,6 +4,7 @@
      1,
      1,
    ],
    &quot;base64&quot;: true,
    &quot;mediaTypes&quot;: &quot;Images&quot;,
+   &quot;quality&quot;: 0,
  },

Number of calls: 1
    at Object.&lt;anonymous&gt; (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\src\app\__tests__\editarPerfil.spec.tsx:159:18)
    at Generator.next (&lt;anonymous&gt;)
    at asyncGeneratorStep (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\@babel\runtime\helpers\asyncToGenerator.js:3:24)
    at _next (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\@babel\runtime\helpers\asyncToGenerator.js:22:9)
    at D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\@babel\runtime\helpers\asyncToGenerator.js:27:7
    at new Promise (&lt;anonymous&gt;)
    at Object.&lt;anonymous&gt; (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\@babel\runtime\helpers\asyncToGenerator.js:19:12)
    at Promise.then.completed (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-circus\build\utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-circus\build\utils.js:231:10)
    at _callCircusTest (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-circus\build\run.js:316:40)
    at _runTest (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-circus\build\run.js:252:3)
    at _runTestsForDescribeBlock (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-circus\build\run.js:126:9)
    at _runTestsForDescribeBlock (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-circus\build\run.js:121:9)
    at run (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-circus\build\run.js:71:3)
    at runAndTransformResultsToJestFormat (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapterInit.js:122:21)
    at jestAdapter (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapter.js:79:19)
    at runTestInternal (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-runner\build\runTest.js:367:16)
    at runTest (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-runner\build\runTest.js:444:34)]]></failure>
</testCase>
</file>
<file path="src\app\__tests__\editarIdoso.spec.tsx">
<testCase name="EditarIdoso deve renderizar o componente corretamente" duration="55" />
<testCase name="EditarIdoso deve exibir erro quando Nome estiver vazio" duration="39" />
<testCase name="EditarIdoso deve exibir erro quando Telefone Respons&#xe1;vel estiver vazio" duration="42" />
<testCase name="EditarIdoso deve exibir erro quando Data de Nascimento estiver vazio" duration="37" />
<testCase name="EditarIdoso deve exibir um modal de confirma&#xe7;&#xe3;o ao tentar apagar um idoso" duration="20" />
<testCase name="EditarIdoso Mensagem de erro recebida ao editar Idoso:" duration="35" />
<testCase name="EditarIdoso Mensagem de erro ao apagar Idoso" duration="22" />
</file>
<file path="src\app\__tests__\visualizarPublicacao.spec.tsx">
<testCase name="VisualizarPublicacao Renderiza sem quebrar" duration="80" />
<testCase name="VisualizarPublicacao Exibe a&#xe7;&#xf5;es corretamente para admin" duration="14" />
<testCase name="VisualizarPublicacao Testa bot&#xe3;o de apagar" duration="52" />
<testCase name="VisualizarPublicacao Testa bot&#xe3;o de reportar" duration="75" />
<testCase name="VisualizarPublicacao Testa bot&#xe3;o de desfazer reporte" duration="62" />
<testCase name="VisualizarPublicacao Testa a navega&#xe7;&#xe3;o para a tela de edi&#xe7;&#xe3;o" duration="70" />
<testCase name="VisualizarPublicacao N&#xe3;o exibe a&#xe7;&#xf5;es para usu&#xe1;rios n&#xe3;o autorizados" duration="12" />
</file>
<file path="src\app\__tests__\metrica.service.spec.tsx">
<testCase name="metricas.service postMetrica deve chamar a API corretamente ao criar uma m&#xe9;trica" duration="2" />
<testCase name="metricas.service postMetrica deve lan&#xe7;ar um erro se a resposta da API n&#xe3;o for bem-sucedida" duration="6" />
<testCase name="metricas.service getAllMetrica deve chamar a API corretamente ao obter todas as m&#xe9;tricas" duration="2" />
<testCase name="metricas.service getAllMetrica deve lan&#xe7;ar um erro se a resposta da API n&#xe3;o for bem-sucedida" duration="1" />
<testCase name="updateMetrica deve chamar a API corretamente ao atualizar uma m&#xe9;trica" duration="1" />
<testCase name="updateMetrica deve lan&#xe7;ar um erro se a resposta da API n&#xe3;o for bem-sucedida" duration="1" />
<testCase name="getSomaHidratacao deve chamar a API corretamente ao obter a soma de hidrata&#xe7;&#xe3;o" duration="1" />
<testCase name="getSomaHidratacao deve lan&#xe7;ar um erro se a resposta da API n&#xe3;o for bem-sucedida" duration="1" />
</file>
<file path="src\app\__tests__\cadastro.spec.tsx">
<testCase name="Cadastro Component renderiza corretamente" duration="46" />
<testCase name="Cadastro Component deve chamar a fun&#xe7;&#xe3;o &apos;postUser&apos; quando n&#xe3;o h&#xe1; erros nos campos" duration="40" />
<testCase name="Cadastro Component n&#xe3;o deve chamar a fun&#xe7;&#xe3;o &apos;postUser&apos; quando h&#xe1; espec&#xed;ficos erros nos campos" duration="33" />
<testCase name="Cadastro Component n&#xe3;o deve chamar a fun&#xe7;&#xe3;o &apos;postUser&apos; quando h&#xe1; erros nos campos" duration="12" />
<testCase name="Cadastro Component n&#xe3;o deve chamar a fun&#xe7;&#xe3;o &apos;postUser&apos; quando h&#xe1; erros espec&#xed;ficos de nome nos campos" duration="20" />
<testCase name="Cadastro Component deve exibir o Toast de erro" duration="35" />
<testCase name="Cadastro Component deve alterar o estado do escondeSenha" duration="14" />
</file>
<file path="src\app\__tests__\MaskHour.spec.tsx">
<testCase name="MaskInput Component should apply mask correctly for valid times" duration="85" />
<testCase name="MaskInput Component should clear the input correctly" duration="2" />
<testCase name="MaskInput Component should handle different lengths of input" duration="2" />
<testCase name="MaskInput Component should ignore non-numeric characters" duration="2" />
<testCase name="MaskInput Component should not call inputMaskChange if the value does not change" duration="2" />
<testCase name="MaskInput Component should apply mask correctly for inputs longer than required" duration="2" />
<testCase name="MaskInput Component should reset the input if the first digit of the hour is greater than 2" duration="2" />
<testCase name="MaskInput Component should only keep the first digit if the second digit of the hour is greater than 9" duration="2" />
<testCase name="MaskInput Component should only keep the hour part if the first digit of the minute is greater than 5" duration="2" />
</file>
<file path="src\app\__tests__\cardMetrica.spec.tsx">
<testCase name="CardMetricas Component renderiza sem erros" duration="69" />
<testCase name="CardMetricas Component exibe as unidades corretas" duration="3" />
<testCase name="CardMetricas Component exibe as unidades corretas 1" duration="3" />
<testCase name="CardMetricas Component exibe as unidades corretas 2" duration="4" />
<testCase name="CardMetricas Component exibe as unidades corretas 3" duration="3" />
<testCase name="CardMetricas Component exibe as unidades corretas 4" duration="2" />
<testCase name="CardMetricas Component exibe as unidades corretas 5" duration="3" />
<testCase name="CardMetricas Component exibe as unidades corretas 6" duration="2" />
<testCase name="CardMetricas Component exibe as unidades corretas 7" duration="3" />
<testCase name="CardMetricas Component exibe as unidades corretas 8" duration="2" />
<testCase name="CardMetricas Component Deve retornar se n&#xe3;o houver dataHora" duration="4" />
</file>
<file path="src\app\__tests__\login.spec.tsx">
<testCase name="Login deve exibir mensagem de erro se o login falhar" duration="160" />
<testCase name="Login deve realizar login com sucesso" duration="94" />
<testCase name="Login deve exibir mensagem de erro quando os campos est&#xe3;o vazios" duration="10" />
<testCase name="Login deve exibir mensagem de erro se o email estiver no formato inv&#xe1;lido" duration="13" />
<testCase name="Login deve alternar a visibilidade da senha ao clicar no &#xed;cone de olho" duration="8" />
</file>
<file path="src\app\__tests__\metricaValue.service.spec.tsx">
<testCase name="metricaValue.service getAllMetricaValues deve chamar a API corretamente ao obter todos os valores de m&#xe9;trica" duration="2" />
<testCase name="metricaValue.service deve lan&#xe7;ar um erro se a resposta da API n&#xe3;o for bem-sucedida" duration="4" />
<testCase name="postMetricaValue deve chamar a API corretamente ao criar um valor de m&#xe9;trica" duration="1" />
<testCase name="postMetricaValue deve lan&#xe7;ar um erro se a resposta da API n&#xe3;o for bem-sucedida" duration="1" />
<testCase name="deleteMetricaValue deve chamar a API corretamente ao deletar um valor de m&#xe9;trica" duration="1" />
<testCase name="deleteMetricaValue deve lan&#xe7;ar um erro se a resposta da API n&#xe3;o for bem-sucedida" duration="1" />
</file>
<file path="src\app\__tests__\cardValorMetrica.spec.tsx">
<testCase name="CardValorMetrica Component renderiza corretamente" duration="37" />
<testCase name="CardValorMetrica Component exibe as unidades corretas 1" duration="5" />
<testCase name="CardValorMetrica Component exibe as unidades corretas 2" duration="6" />
<testCase name="CardValorMetrica Component exibe as unidades corretas 3" duration="5" />
<testCase name="CardValorMetrica Component exibe as unidades corretas 4" duration="6" />
<testCase name="CardValorMetrica Component exibe as unidades corretas 5" duration="5" />
<testCase name="CardValorMetrica Component exibe as unidades corretas 6" duration="6" />
<testCase name="CardValorMetrica Component exibe as unidades corretas 7" duration="5" />
<testCase name="CardValorMetrica Component exibe as unidades corretas 8" duration="8" />
</file>
<file path="src\app\__tests__\criaPublicacao.spec.tsx">
<testCase name="CriaPublicacao deve exibir erros de valida&#xe7;&#xe3;o quando T&#xed;tulo estiver vazio" duration="90" />
<testCase name="CriaPublicacao deve exibir erros de valida&#xe7;&#xe3;o quando Descri&#xe7;&#xe3;o estiver vazio" duration="55" />
<testCase name="CriaPublicacao n&#xe3;o deve exibir erros de valida&#xe7;&#xe3;o quando T&#xed;tulo, Descri&#xe7;&#xe3;o e Categoria est&#xe3;o preenchidos" duration="61" />
<testCase name="CriaPublicacao deve exibir mensagem de erro para publica&#xe7;&#xe3;o" duration="95" />
</file>
<file path="src\app\__tests__\image.helper.spec.tsx">
<testCase name="getImageUri deve retornar uma URI de imagem v&#xe1;lida para um Buffer fornecido" duration="1" />
<testCase name="getImageUri Imagem ja esta codificada" duration="1" />
<testCase name="getImageUri Imagem vazia" duration="1" />
</file>
<file path="src\app\__tests__\ModalMeta.spec.tsx">
<testCase name="ModalMeta Component should render modal when visible prop is true" duration="56" />
<testCase name="ModalMeta Component should not render modal when visible prop is false" duration="2" />
<testCase name="ModalMeta Component should show error message when input is empty and Save button is pressed" duration="8" />
<testCase name="ModalMeta Component should show error message when input is invalid format and Save button is pressed" duration="12" />
<testCase name="ModalMeta Component should call callbackFn with input value when input is valid and Save button is pressed" duration="10" />
<testCase name="ModalMeta Component should call closeModal when Cancel button is pressed" duration="9" />
</file>
<file path="src\app\__tests__\listarIdosos.spec.tsx">
<testCase name="ListarIdosos deve exibir a lista de idosos ap&#xf3;s a conclus&#xe3;o da chamada da API" duration="1108">
<failure message="Error"><![CDATA[Error: expect(jest.fn()).toHaveBeenCalled()

Expected number of calls: &gt;= 1
Received number of calls:    0
    at Object.&lt;anonymous&gt; (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\src\app\__tests__\listarIdosos.spec.tsx:53:18)
    at Generator.next (&lt;anonymous&gt;)
    at asyncGeneratorStep (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\@babel\runtime\helpers\asyncToGenerator.js:3:24)
    at _next (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\@babel\runtime\helpers\asyncToGenerator.js:22:9)
    at D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\@babel\runtime\helpers\asyncToGenerator.js:27:7
    at new Promise (&lt;anonymous&gt;)
    at Object.&lt;anonymous&gt; (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\@babel\runtime\helpers\asyncToGenerator.js:19:12)
    at Promise.then.completed (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-circus\build\utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-circus\build\utils.js:231:10)
    at _callCircusTest (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-circus\build\run.js:316:40)
    at _runTest (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-circus\build\run.js:252:3)
    at _runTestsForDescribeBlock (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-circus\build\run.js:126:9)
    at _runTestsForDescribeBlock (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-circus\build\run.js:121:9)
    at run (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-circus\build\run.js:71:3)
    at runAndTransformResultsToJestFormat (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapterInit.js:122:21)
    at jestAdapter (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapter.js:79:19)
    at runTestInternal (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-runner\build\runTest.js:367:16)
    at runTest (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-runner\build\runTest.js:444:34)]]></failure>
</testCase>
<testCase name="ListarIdosos deve exibir uma mensagem de erro se a chamada da API falhar" duration="5011">
<failure message="Error"><![CDATA[Error: thrown: &quot;Exceeded timeout of 5000 ms for a test.
Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.&quot;
    at it (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\src\app\__tests__\listarIdosos.spec.tsx:60:3)
    at _dispatchDescribe (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-circus\build\index.js:91:26)
    at describe (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-circus\build\index.js:55:5)
    at Object.describe (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\src\app\__tests__\listarIdosos.spec.tsx:30:1)
    at Runtime._execModule (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-runtime\build\index.js:1439:24)
    at Runtime._loadModule (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-runtime\build\index.js:1022:12)
    at Runtime.requireModule (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-runtime\build\index.js:882:12)
    at jestAdapter (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapter.js:77:13)
    at runTestInternal (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-runner\build\runTest.js:367:16)
    at runTest (D:\UnB\Ciclo 7\MDS\Repo front\2024-1-GEROcuidado-Front\node_modules\jest-runner\build\runTest.js:444:34)]]></failure>
</testCase>
<testCase name="ListarIdosos Navega para a tela anterior ao clicar no bot&#xe3;o de voltar" duration="12" />
</file>
<file path="src\app\__tests__\editarPublicacao.spec.tsx">
<testCase name="EditarPublicacao renders correctly" duration="74" />
<testCase name="EditarPublicacao calls save function and shows success toast" duration="59" />
</file>
<file path="src\app\__tests__\visualizarMetrica.spec.tsx">
<testCase name="VisualizarMetrica component renders the component correctly" duration="72" />
<testCase name="VisualizarMetrica component opens the modal when &apos;Novo valor&apos; button is pressed" duration="70" />
<testCase name="VisualizarMetrica component does not call calcular for categories other than &apos;IMC&apos;" duration="9" />
<testCase name="VisualizarMetrica component handleUser - should handle empty AsyncStorage values" duration="8" />
</file>
<file path="src\app\__tests__\BarraPesquisa.spec.tsx">
<testCase name="BarraPesquisa deve renderizar corretamente" duration="58" />
<testCase name="BarraPesquisa deve chamar a fun&#xe7;&#xe3;o de retorno (callbackFn) com o valor do campo de pesquisa" duration="3" />
<testCase name="BarraPesquisa deve limpar o campo de pesquisa quando o texto for apagado" duration="3" />
<testCase name="BarraPesquisa deve chamar a fun&#xe7;&#xe3;o de retorno (callbackFn) quando o usu&#xe1;rio pressionar Enter" duration="2" />
</file>
<file path="src\app\__tests__\cardRotina.spec.tsx">
<testCase name="Teste Componente Card Rotina Renderiza corretamente" duration="66" />
<testCase name="Teste Componente Card Rotina Renderiza corretamente Card de exercicios" duration="5" />
<testCase name="Teste Componente Card Rotina Renderiza corretamente Card de Medicamentos" duration="5" />
</file>
<file path="src\app\__tests__\CardIdoso.spec.tsx">
<testCase name="CardIdoso renderiza o componente CardIdoso com o nome correto" duration="61" />
<testCase name="CardIdoso navega para a edi&#xe7;&#xe3;o do Idoso ao pressionar o &#xed;cone de l&#xe1;pis" duration="3" />
<testCase name="CardIdoso seleciona o Idoso ao pressionar o componente CardIdoso" duration="2" />
</file>
<file path="src\app\__tests__\login-success.spec.tsx">
<testCase name="Login Component - Sucesso deve lidar com campos vazios e inv&#xe1;lidos" duration="65" />
<testCase name="Login Component - Sucesso deve lidar com senha inv&#xe1;lida" duration="8" />
</file>
<file path="src\app\__tests__\tutorial.spec.tsx">
<testCase name="O componente Tutorial deve renderizar corretamente" duration="84" />
<testCase name="O bot&#xe3;o &quot;Pular&quot; deve chamar a fun&#xe7;&#xe3;o &quot;router.replace&quot; com o caminho correto" duration="5" />
<testCase name="O bot&#xe3;o &quot;Avan&#xe7;ar&quot; deve permitir navegar entre os slides" duration="8" />
<testCase name="O bot&#xe3;o &quot;Avan&#xe7;ar&quot; deve permitir navegar entre os slides" duration="10" />
</file>
<file path="src\app\__tests__\layout.spec.tsx">
<testCase name="AppLayout renderiza corretamente" duration="34" />
<testCase name="AppLayout deve registrar e remover listeners de notifica&#xe7;&#xf5;es" duration="5" />
</file>
<file path="src\app\__tests__\perfil.spec.tsx">
<testCase name="Perfil renderiza corretamente" duration="60" />
<testCase name="Perfil renderiza corretamente com user id" duration="8" />
<testCase name="Perfil renderiza corretamente com user id e foto" duration="6" />
<testCase name="Perfil deve chamar logout" duration="116" />
<testCase name="Perfil deve chamar navigate" duration="108" />
</file>
<file path="src\app\__tests__\ModalConfirmation.spec.tsx">
<testCase name="ModalConfirmation deve renderizar corretamente quando vis&#xed;vel" duration="65" />
<testCase name="ModalConfirmation deve chamar a fun&#xe7;&#xe3;o de fechamento do modal ao pressionar &quot;Cancelar&quot;" duration="3" />
<testCase name="ModalConfirmation n&#xe3;o deve renderizar quando n&#xe3;o vis&#xed;vel" duration="2" />
</file>
<file path="src\app\__tests__\rotinas.spec.tsx">
<testCase name="Rotinas renderiza corretamente" duration="19" />
<testCase name="Rotinas renderiza corretamente com user id" duration="5" />
<testCase name="Rotinas renderiza corretamente quando o idoso n&#xe3;o est&#xe1; selecionado" duration="66" />
<testCase name="Rotinas renderiza corretamente quando todas as condi&#xe7;&#xf5;es s&#xe3;o atendidas" duration="55" />
</file>
<file path="src\app\__tests__\LinkButton.spec.tsx">
<testCase name="LinkButton deve renderizar corretamente" duration="38" />
<testCase name="LinkButton deve usar a cor de fundo personalizada" duration="2" />
<testCase name="LinkButton deve chamar a fun&#xe7;&#xe3;o de navega&#xe7;&#xe3;o corretamente" duration="2" />
</file>
<file path="src\app\__tests__\FiltroDropdown.spec.tsx">
<testCase name="FiltroDropdown Component should render the dropdown with default label" duration="75" />
<testCase name="FiltroDropdown Component should display options when dropdown is clicked" duration="20" />
<testCase name="FiltroDropdown Component should toggle dropdown visibility when dropdown button is clicked" duration="10" />
<testCase name="FiltroDropdown Component should show selected option when a filter is provided" duration="6" />
</file>
<file path="src\app\__tests__\UploadImage.spec.tsx">
<testCase name="UploadImage renderiza corretamente sem imagem inicial" duration="76" />
<testCase name="UploadImage deve renderizar corretamente" duration="3" />
<testCase name="UploadImage escolher imagem e chamar setFoto corretamente" duration="66" />
</file>
<file path="src\app\__tests__\_layout.spec.tsx">
<testCase name="AppLayout Component deve renderizar o layout com Toast e Stack" duration="141" />
</file>
<file path="src\app\__tests__\Publicacao.spec.tsx">
<testCase name="Publicacao deve formatar o nome corretamente com crop ativado" duration="36" />
</file>
<file path="src\app\__tests__\BackButton.spec.tsx">
<testCase name="BackButton chama router.back() quando pressionado" duration="79" />
<testCase name="BackButton chama router.push() com a rota correta quando route &#xe9; fornecido" duration="3" />
</file>
<file path="src\app\__tests__\PublicacaoVisualizar.spec.tsx">
<testCase name="PublicacaoVisualizar n&#xe3;o deve renderizar a imagem do usu&#xe1;rio quando n&#xe3;o h&#xe1; foto" duration="73" />
<testCase name="PublicacaoVisualizar deve formatar a data corretamente" duration="3" />
</file>
<file path="src\app\__tests__\UploadImageV2.spec.tsx">
<testCase name="UploadImageV2 deve renderizar corretamente e chamar a fun&#xe7;&#xe3;o de callback ao selecionar uma imagem" duration="76" />
</file>
<file path="src\app\__tests__\cadastrarMetrica.spec.tsx">
<testCase name="criarMetrica Component renderiza corretamente e interage com as m&#xe9;tricas" duration="103" />
</file>
<file path="src\app\__tests__\visualizarValoresMedidos.spec.tsx">
<testCase name="VisualizarValoresMedidos The component rendered" duration="38" />
</file>
<file path="src\app\__tests__\Loading.spec.tsx">
<testCase name="Loading deve renderizar o componente de carregamento corretamente" duration="73" />
</file>
<file path="src\app\__tests__\index.spec.tsx">
<testCase name="Home renderiza corretamente" duration="33" />
<testCase name="Home deve conter um t&#xed;tulo" duration="3" />
<testCase name="Home deve conter bot&#xf5;es de a&#xe7;&#xe3;o" duration="3" />
</file>
<file path="src\app\__tests__\editarValorMetrica.spec.tsx">
<testCase name="EditarMetrica Component The component rendered" duration="31" />
</file>
<file path="src\app\components\__tests__\ModalConfirmation.spec.tsx">
<testCase name="ModalConfirmation Component renderiza corretamente" duration="79" />
</file>
<file path="src\app\__tests__\weekDay.spec.tsx">
<testCase name="Testes para WeekDays deve renderizar corretamente" duration="72" />
<testCase name="Testes para WeekDays deve chamar a fun&#xe7;&#xe3;o de callback corretamente ao pressionar um dia" duration="6" />
</file>
<file path="src\app\__tests__\CustomButton.spec.tsx">
<testCase name="CustomButton renderiza corretamente" duration="78" />
<testCase name="CustomButton Chama a fun&#xe7;&#xe3;o de callback quando pressionado" duration="3" />
</file>
<file path="src\app\__tests__\NaoAutenticado.spec.tsx">
<testCase name="NaoAutenticado deve renderizar o componente &apos;NaoAutenticado&apos; corretamente" duration="33" />
</file>
<file path="src\app\__tests__\EmConstrucao.spec.tsx">
<testCase name="EmConstrucao component renders correctly" duration="82" />
</file>
<file path="src\app\__tests__\response.interface.spec.tsx">
<testCase name="IResponse Interface deve ser uma interface com as propriedades data e message" duration="1" />
</file>
<file path="src\app\__tests__\event.spec.tsx">
<testCase name="Event component renders correctly with given props" duration="73" />
</file>
<file path="src\app\__tests__\registros.spec.tsx">
<testCase name="Registros renderiza corretamente" duration="45" />
<testCase name="Registros renderiza corretamente com user id" duration="7" />
</file>
<file path="src\app\__tests__\ItemTutorial.spec.tsx">
<testCase name="ItemTutorial renderiza corretamente" duration="74" />
</file>
<file path="src\app\__tests__\ErrorMessage.spec.tsx">
<testCase name="ErrorMessage renderiza corretamente" duration="70" />
</file>
<file path="src\app\__tests__\forum.spec.tsx">
<testCase name="Forum renderiza corretamente" duration="44" />
</file>
</testExecutions>